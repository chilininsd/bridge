Script started on Fri Jan 23 02:15:12 2004
[amit@dslamit gdb]$ gdb strings
GNU gdb 5.3-22mdk (Mandrake Linux)
Copyright 2002 Free Software Foundation, Inc.
GDB is free software, covered by the GNU General Public License, and you are
welcome to change it and/or distribute copies of it under certain conditions.
Type "show copying" to see the conditions.
There is absolutely no warranty for GDB.  Type "show warranty" for details.
This GDB was configured as "i586-mandrake-linux-gnu"...
(gdb) break main
Breakpoint 1 at 0x8048513: file strings.c, line 10.
(gdb) run
Starting program: /home/amit/C-examples/gdb/strings 

Breakpoint 1, main () at strings.c:10
10		char *r = "winnie";
(gdb) [K(gdb) b[K(gdb) br[K(gdb) bre[K(gdb) brea[K(gdb) break[K(gdb) break [K(gdb) break 4[K(gdb) break 41[K(gdb) break 41
Breakpoint 2 at 0x8048620: file strings.c, line 41.
(gdb) [K(gdb) l[K(gdb) li[K(gdb) lis[K(gdb) list[K(gdb) list [K(gdb) list 4[K(gdb) list 40[K(gdb) list 40 [K(gdb) list 41[K(gdb) list 41
36			printf("r > s (lexicographically)\n");
37		
38	
39	
40		
41		free(s);
42		s = (char *) malloc(sizeof(char)*MAXLEN);
43		strcpy(s, " tigger pooh abracadabra woo ;; woo & choo choo");
44	
45		/* save a copy because strtok will eat it up */
(gdb) display s
1: s = 0xbfffef88 "¨ïÿ¿÷ç\003@\001"
(gdb) continue
Continuing.
String r = winnie length of r = 6
r = winnie s = tiggerwinnie q = winnie 
r > s (lexicographically)

Breakpoint 2, main () at strings.c:41
41		free(s);
1: s = 0x8049b38 "tiggerwinnie"
(gdb)  n
42		s = (char *) malloc(sizeof(char)*MAXLEN);
1: s = 0x8049b38 "tiggerwinnie"
(gdb)  n
43		strcpy(s, " tigger pooh abracadabra woo ;; woo & choo choo");
1: s = 0x8049b38 "tiggerwinnie"
(gdb)  n
46		save = (char *) malloc(sizeof(char)*(strlen(s)+1));
1: s = 0x8049b38 " tigger pooh abracadabra woo ;; woo & choo choo"
(gdb) list 71
66		token = strsep(&s, " ;"); /* use space as a delimiter */
67	
68	
69		while (token != NULL)
70		{
71			printf("next token = %s\n", token);
72			token = strsep(&s,  " ;");
73		}
74		exit(0);
75		
(gdb) break 71
Breakpoint 3 at 0x8048773: file strings.c, line 71.
(gdb)  continue
Continuing.
starting to tokenize the string:  tigger pooh abracadabra woo ;; woo & choo choo 
next token = tigger
next token = pooh
next token = abracadabra
next token = woo
next token = ;;
next token = woo
next token = &
next token = choo
next token = choo
starting to tokenize the string:  tigger pooh abracadabra woo ;; woo & choo choo 

Breakpoint 3, main () at strings.c:71
71			printf("next token = %s\n", token);
1: s = 0x8049b39 "tigger pooh abracadabra woo ;; woo & choo choo"
(gdb) p token
$1 = 0x8049b38 ""
(gdb) continue
Continuing.
next token = 

Breakpoint 3, main () at strings.c:71
71			printf("next token = %s\n", token);
1: s = 0x8049b40 "pooh abracadabra woo ;; woo & choo choo"
(gdb) info breakpoints
Num Type           Disp Enb Address    What
1   breakpoint     keep y   0x08048513 in main at strings.c:10
	breakpoint already hit 1 time
2   breakpoint     keep y   0x08048620 in main at strings.c:41
	breakpoint already hit 1 time
3   breakpoint     keep y   0x08048773 in main at strings.c:71
	breakpoint already hit 2 times
(gdb) continue
Continuing.
next token = tigger

Breakpoint 3, main () at strings.c:71
71			printf("next token = %s\n", token);
1: s = 0x8049b45 "abracadabra woo ;; woo & choo choo"
(gdb)  continue
Continuing.
next token = pooh

Breakpoint 3, main () at strings.c:71
71			printf("next token = %s\n", token);
1: s = 0x8049b51 "woo ;; woo & choo choo"
(gdb) info breakpoints
Num Type           Disp Enb Address    What
1   breakpoint     keep y   0x08048513 in main at strings.c:10
	breakpoint already hit 1 time
2   breakpoint     keep y   0x08048620 in main at strings.c:41
	breakpoint already hit 1 time
3   breakpoint     keep y   0x08048773 in main at strings.c:71
	breakpoint already hit 4 times
(gdb) delete 3
(gdb) info breakpoints
Num Type           Disp Enb Address    What
1   breakpoint     keep y   0x08048513 in main at strings.c:10
	breakpoint already hit 1 time
2   breakpoint     keep y   0x08048620 in main at strings.c:41
	breakpoint already hit 1 time
(gdb) continue
Continuing.
next token = abracadabra
next token = woo
next token = 
next token = 
next token = 
next token = woo
next token = &
next token = choo
next token = choo

Program exited normally.
(gdb)  quit
[amit@dslamit gdb]$ exit
Script done on Fri Jan 23 02:17:18 2004
